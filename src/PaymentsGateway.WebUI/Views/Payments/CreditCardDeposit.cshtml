@model dynamic

@{
    ViewBag.Title = "CcDeposit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div>
    <h1>Have some fun by paying us with your: </h1>
    <div class="container-fluid row bg-orange bg-trasparent">
        <h2 class="col-md-3">Credit Card</h2>

        <div class="col-md-9">
            <div class="row">
                <div class="col-md-9 form-group">
                    <select data-bind="options:availableCreditCards, optionsText:'last4', value:creditCard" class="form-control"></select>
                </div>
                <div class="col-md-6 form-group">
                    <input type="text" data-bind="value:nameOnCard" class="form-control" placeholder="Name On The Card" disabled="disabled"/>
                </div>
                <div class="col-md-6 form-group">
                    <input type="text" data-bind="value: expirationDate" class="form-control" placeholder="Expiration Date" disabled="disabled"/>
                </div>
                <div class="col-md-6 form-group">
                    <select data-bind="value: currency, options:availableCurrencies" class="form-control"></select>
                </div>
                <div class="col-md-6 form-group">
                    <input type="number" data-bind="value: amount" placeholder="Amount to deposit" class="form-control"/>
                </div>
            </div>

                <div class="col-md-11">
                    <button id="deposit" data-bind="click: deposit" class="pull-right btn">
                        <span class="glyphicon paymentState" data-bind="css: paymentState"></span>
                        Deposit
                    </button>
                </div>
        </div>
    </div>
    <div class="bg-grey" data-bind="foreach: notifications">
        <div>
            <p data-bind="text:$data"></p>
        </div>
    </div>
</div>


<script src="~/Scripts/libs/hubs.js"></script>
<script src="~/Scripts/PaymentsDal.js"></script>
<script type="text/javascript">
    var depositVM = (function (ko) {
        var paymentsDal = PaymentsDal(handlePaymentResponse, handleMonitoringEvent);
        var availableCreditCards = [
            { id: 100, accountNumber: 100, last4: "xxxxxxxxxxxx1234", nameOnCard: "Silviu Eigel", expirationDate: new Date(2015, 11, 11) },
            { id: 101, accountNumber: 101, last4: "xxxxxxxxxxxx6789", nameOnCard: "Alex Michel", expirationDate: new Date(2016, 10, 10) }
        ];
        var availableCurrencies = ['USD', 'EUR', 'GBP'];

        var creditCard = ko.observable(availableCreditCards[0]),
            currency = ko.observable(),
            amount = ko.observable().extend({ required: true, min: 1 }),
            notifications = ko.observableArray([]),
            paymentState = ko.observable();

        creditCard.subscribe(function (val) {
            paymentsDal.switchAccount(val.accountNumber);
        });

        paymentsDal.switchAccount(creditCard().accountNumber);

        function deposit() {
            notifications.removeAll();
            paymentsDal.payWithCreditCard({
                accountNumber: creditCard().accountNumber,
                cardId: creditCard().id,
                amount: amount(),
                currency: currency()
            }, handlePaymentResponse).done(handlePaymentResponse);
        }

        function handleMonitoringEvent(res) {
            notifications.push(res);
        }

        function handlePaymentResponse(res) {
            if (res.Status === 0) {
                paymentState("glyphicon-time");
                console.log('Your deposit is pending! Reference Number:' + res.TransactionId);
            } else if (res.Status === 2) {
                paymentState("glyphicon-ok");
                console.log('Your deposit is successful! Reference Number:' + res.TransactionId);
            } else {
                paymentState("glyphicon-remove");
                console.log('Your deposit failed because:' + res.ErrorMessage);
            }
        }

        return {
            availableCreditCards: availableCreditCards,
            creditCard: creditCard,
            nameOnCard: ko.computed(function () {
                return creditCard().nameOnCard;
            }),
            expirationDate: ko.computed(function () {
                return creditCard().expirationDate.toLocaleDateString();
            }),
            availableCurrencies: availableCurrencies,
            currency: currency,
            amount: amount,
            notifications: notifications,
            paymentState: paymentState,
            deposit: deposit
        };
    })(ko);


    $(function () {
        ko.applyBindings(depositVM);

    });
</script>
